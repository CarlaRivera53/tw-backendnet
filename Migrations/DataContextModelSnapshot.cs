// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backendnet.Data;

#nullable disable

namespace tw_backendnet.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CategoriaPelicula", b =>
                {
                    b.Property<int>("CategoriasCategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("PeliculasPeliculaId")
                        .HasColumnType("int");

                    b.HasKey("CategoriasCategoriaId", "PeliculasPeliculaId");

                    b.HasIndex("PeliculasPeliculaId");

                    b.ToTable("CategoriaPelicula");
                });

            modelBuilder.Entity("backendnet.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Protegida")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria");

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            Nombre = "accion",
                            Protegida = true
                        },
                        new
                        {
                            CategoriaId = 2,
                            Nombre = "aventura",
                            Protegida = true
                        },
                        new
                        {
                            CategoriaId = 3,
                            Nombre = "animacion",
                            Protegida = true
                        },
                        new
                        {
                            CategoriaId = 4,
                            Nombre = "ciencia ficcion",
                            Protegida = true
                        },
                        new
                        {
                            CategoriaId = 5,
                            Nombre = "comedia",
                            Protegida = true
                        },
                        new
                        {
                            CategoriaId = 6,
                            Nombre = "criemen",
                            Protegida = true
                        },
                        new
                        {
                            CategoriaId = 7,
                            Nombre = "documental",
                            Protegida = true
                        },
                        new
                        {
                            CategoriaId = 8,
                            Nombre = "drama",
                            Protegida = true
                        },
                        new
                        {
                            CategoriaId = 9,
                            Nombre = "familiar",
                            Protegida = true
                        },
                        new
                        {
                            CategoriaId = 10,
                            Nombre = "fantasia",
                            Protegida = true
                        },
                        new
                        {
                            CategoriaId = 11,
                            Nombre = "historia",
                            Protegida = true
                        },
                        new
                        {
                            CategoriaId = 12,
                            Nombre = "horror",
                            Protegida = true
                        },
                        new
                        {
                            CategoriaId = 13,
                            Nombre = "musica",
                            Protegida = true
                        },
                        new
                        {
                            CategoriaId = 14,
                            Nombre = "misterio",
                            Protegida = true
                        },
                        new
                        {
                            CategoriaId = 15,
                            Nombre = "romance",
                            Protegida = true
                        });
                });

            modelBuilder.Entity("backendnet.Models.Pelicula", b =>
                {
                    b.Property<int>("PeliculaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PeliculaId"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<string>("Poster")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sinopsis")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PeliculaId");

                    b.ToTable("Pelicula");

                    b.HasData(
                        new
                        {
                            PeliculaId = 1,
                            Anio = 0,
                            Poster = "N/A",
                            Sinopsis = "el banquero  Andy Dufresne es arrestado por matar a su espsosa",
                            Titulo = "Sueño de fuga"
                        },
                        new
                        {
                            PeliculaId = 2,
                            Anio = 0,
                            Poster = "N/A",
                            Sinopsis = "el patriarca de una organizacion criminal ",
                            Titulo = "El padrino"
                        },
                        new
                        {
                            PeliculaId = 3,
                            Anio = 0,
                            Poster = "N/A",
                            Sinopsis = "cuando el Joker emerge causando caos en cidad Gotica",
                            Titulo = "El caballero oscuro"
                        },
                        new
                        {
                            PeliculaId = 4,
                            Anio = 0,
                            Poster = "N/A",
                            Sinopsis = "Gandalf y Aragon lideran el mundo de los hombres",
                            Titulo = "El retorno del rey "
                        },
                        new
                        {
                            PeliculaId = 5,
                            Anio = 0,
                            Poster = "N/A",
                            Sinopsis = "la vida de dos mafiosos , un  boxeador",
                            Titulo = "tiempos violentos"
                        },
                        new
                        {
                            PeliculaId = 6,
                            Anio = 0,
                            Poster = "N/A",
                            Sinopsis = "Las presidencias de Kenedy y johnson, los eventos de vietnam",
                            Titulo = "Forrest Gump"
                        },
                        new
                        {
                            PeliculaId = 7,
                            Anio = 0,
                            Poster = "N/A",
                            Sinopsis = "un hombre deprimido conoce a un fabricante de jabon",
                            Titulo = "El club de la pelea"
                        },
                        new
                        {
                            PeliculaId = 8,
                            Anio = 0,
                            Poster = "N/A",
                            Sinopsis = "a un ladron que roba secretos coorporativos a traves de la tecnologia",
                            Titulo = "Incepcion"
                        },
                        new
                        {
                            PeliculaId = 9,
                            Anio = 0,
                            Poster = "N/A",
                            Sinopsis = "los rebeldes han vencido",
                            Titulo = "Star wars: espisodio V - El imperip contrataca"
                        },
                        new
                        {
                            PeliculaId = 10,
                            Anio = 0,
                            Poster = "N/A",
                            Sinopsis = "un hacker se da cuenta por medio de otro rebeldes de la naturaleza",
                            Titulo = "Matrix"
                        },
                        new
                        {
                            PeliculaId = 11,
                            Anio = 0,
                            Poster = "N/A",
                            Sinopsis = "un grupo de exploradores prueban los saltos a traves del espacio",
                            Titulo = "Interestelar"
                        },
                        new
                        {
                            PeliculaId = 12,
                            Anio = 0,
                            Poster = "N/A",
                            Sinopsis = "Paul Atreides se une a chani y los fremmen",
                            Titulo = "Dune: parte dos"
                        },
                        new
                        {
                            PeliculaId = 13,
                            Anio = 0,
                            Poster = "N/A",
                            Sinopsis = "un cyborg, identico al que fracaso",
                            Titulo = "terminator 2 : el juicio Final"
                        },
                        new
                        {
                            PeliculaId = 14,
                            Anio = 0,
                            Poster = "N/A",
                            Sinopsis = "Marty McFly, un estudiante de 17 años ",
                            Titulo = "volver al futuro"
                        },
                        new
                        {
                            PeliculaId = 15,
                            Anio = 0,
                            Poster = "N/A",
                            Sinopsis = "vivir en Barbie Land es ser perfecto en un lugar perfecto",
                            Titulo = "Barbie"
                        });
                });

            modelBuilder.Entity("CategoriaPelicula", b =>
                {
                    b.HasOne("backendnet.Models.Categoria", null)
                        .WithMany()
                        .HasForeignKey("CategoriasCategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backendnet.Models.Pelicula", null)
                        .WithMany()
                        .HasForeignKey("PeliculasPeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
